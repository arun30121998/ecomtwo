{"version":3,"file":"static/js/257.bf02462e.chunk.js","mappings":"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","sources":["Components/Form/DemoForm.js","Pages/Profile/UserLogin.js","services/api.js"],"sourcesContent":["import React from \"react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = ({\r\n  fields,\r\n  onSubmit,\r\n  phoneNumber,\r\n  setPhoneNumber,\r\n  register,\r\n  errors,\r\n  labelButton,\r\n  showPhoneInput,\r\n  showCheckboxInput,\r\n  handleNavigate,\r\n  labelNavigate,\r\n  errorMessaage,\r\n}) => {\r\n  const handlePhoneInputChange = (value) => {\r\n    // Update the phone number state\r\n    setPhoneNumber(value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {fields.map((field) => (\r\n        <div key={field.name}>\r\n          <label\r\n            className='input-label'\r\n            htmlFor={field.name}\r\n          >\r\n            {field.label}\r\n          </label>\r\n          <input\r\n            className='border-2   validation-input'\r\n            {...register(field.name, field.validation)}\r\n            aria-invalid={errors[field.name] ? \"true\" : \"false\"}\r\n          />\r\n          {errors[field.name] && (\r\n            <p\r\n              className='m-0 form-erroe-style'\r\n              role='alert'\r\n            >\r\n              {errors[field.name].message}\r\n            </p>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Conditionally render PhoneInput based on the \"showPhoneInput\" prop */}\r\n      {showPhoneInput && (\r\n        <div>\r\n          <label\r\n            className='input-label'\r\n            htmlFor='phoneNumber'\r\n          >\r\n            Phone Number:\r\n          </label>\r\n          <PhoneInput\r\n            className=''\r\n            country={\"in\"}\r\n            name='phoneNumber'\r\n            value={phoneNumber}\r\n            onChange={handlePhoneInputChange}\r\n            inputProps={{\r\n              name: \"phoneNumber\",\r\n              required: true, // Add the required attribute for built-in validation\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n      {showCheckboxInput && (\r\n        <div className=' d-flex justify-between form-checkbox'>\r\n          <div className='d-flex    form-checkbox'>\r\n            <input\r\n              type='checkbox'\r\n              name=''\r\n              id=''\r\n            />\r\n            <p>Accept Terms & Conditions</p>\r\n          </div>\r\n          <div className='login-link'>\r\n            <p\r\n              onClick={handleNavigate}\r\n              className=' cursor-pointer'\r\n            >\r\n              {labelNavigate}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <p className=' text-red-500'>{errorMessaage}</p>\r\n\r\n      <button\r\n        className='validation-form-btn w-full'\r\n        type='submit'\r\n      >\r\n        {labelButton}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport { Form };\r\n","import React, { useState } from \"react\";\r\nimport { loginUser } from \"../../services/api\";\r\nimport \"./Profile.css\";\r\nimport { Form } from \"../../Components/Form/DemoForm\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst UserLogin = () => {\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(\"\");\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const handleLogin = async (data) => {\r\n    // Extract the email and password from the form data\r\n    const { email, password } = data;\r\n\r\n    // Form validation\r\n    if (!email.trim() || !password.trim()) {\r\n      setError(\"Please enter both email and password.\");\r\n      return;\r\n    }\r\n\r\n    // Perform user login here\r\n    const loginData = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      const response = await loginUser(loginData);\r\n      console.log(\"user login successful:\", response);\r\n\r\n      // Clear form fields and error message after successful login\r\n      setError(\"\");\r\n\r\n      // Store user information in sessionStorage\r\n      sessionStorage.setItem(\"accessToken\", response.token);\r\n      sessionStorage.setItem(\"email\", email);\r\n\r\n      // Store specific user details in sessionStorage\r\n      sessionStorage.setItem(\"specificUser\", JSON.stringify(response.user));\r\n\r\n      // Reload the page to reflect the logged-in state\r\n      navigate('/')\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(\"error while logging in:\", error);\r\n      setError(\"Invalid email or password.\");\r\n    }\r\n  };\r\n\r\n  const formFields = [\r\n    {\r\n      name: \"email\",\r\n      label: \"Email:\",\r\n      validation: {\r\n        required: \"Email is required\",\r\n        pattern: {\r\n          value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/i,\r\n          message: \"Invalid email format\",\r\n        },\r\n        maxLength: {\r\n          value: 100,\r\n          message: \"Email should not exceed 100 characters\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"Password:\",\r\n      validation: {\r\n        required: \"Password is required\",\r\n        // Add any other validation rules for the password if needed\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className='mt-10'>\r\n      <div className='col-lg-4 col-12 m-auto registration-from-style'>\r\n        <h1>Login Here</h1>\r\n        <Form\r\n         fields={formFields}\r\n         onSubmit={handleSubmit(handleLogin)}\r\n         register={register} // Pass the register function to the Form component\r\n         errors={errors} // Pass the errors from React Hook Form\r\n          labelButton=\"Login\"\r\n          showCheckboxInput={true}\r\n          labelNavigate=\"Register Here\"\r\n          handleNavigate={() => navigate('/registration')}\r\n        />\r\n        {error && <p className=\" text-red-500  m-0 \" role='alert'>{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","// services/api.js\r\nimport axios from 'axios';\r\n\r\nexport const registerUser = async (registrationData) => {\r\n  try {\r\n    const response = await axios.post('http://localhost:3002/api/register', registrationData);\r\n    return response.data;\r\n  } catch (error) {\r\n    // If the API responds with a 409 status, it means the user is already registered\r\n    if (error.response && error.response.status === 409) {\r\n      throw new Error(\"User with the same email or phone number already exists\");\r\n    }\r\n\r\n    throw new Error(\"Something went wrong during registration\");\r\n  }\r\n};\r\n\r\nexport const loginUser = async (loginData) => { // Pass setUser function from UserContextProvider\r\n    try {\r\n      const response = await axios.post('http://localhost:3002/api/login', loginData);\r\n  \r\n      // Store the user details in the UserContext\r\n  \r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n};\r\n  \r\n// services/api.js\r\n\r\nexport const getUsers = async () => {\r\n  try {\r\n    console.log(\"Fetching users...\");\r\n    const response = await axios.get('http://localhost:3002/api/users');\r\n    console.log(\"User data received:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error while fetching users:\", error);\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n\r\n"],"names":["Form","_ref","fields","onSubmit","phoneNumber","setPhoneNumber","register","errors","labelButton","showPhoneInput","showCheckboxInput","handleNavigate","labelNavigate","errorMessaage","_jsxs","children","map","field","_jsx","className","htmlFor","name","label","_objectSpread","validation","role","message","PhoneInput","country","value","onChange","inputProps","required","type","id","onClick","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","error","setError","_useForm","useForm","handleSubmit","formState","handleLogin","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","email","password","loginData","response","wrap","_context","prev","next","trim","abrupt","loginUser","sent","console","log","sessionStorage","setItem","token","JSON","stringify","user","window","location","reload","t0","stop","_x","apply","arguments","pattern","maxLength","registerUser","registrationData","axios","post","status","Error","_ref2","_callee2","_context2","_x2"],"sourceRoot":""}