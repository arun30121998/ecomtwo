{"version":3,"file":"static/js/590.ba47be59.chunk.js","mappings":"4RAYMA,EAAe,CACnB,CACEC,GAAI,EACJC,MAAO,WACPC,MAAO,YACPC,WAAWC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,KAE9B,CACEL,GAAI,EACJC,MAAO,aACPC,MAAO,WACPC,WAAWC,EAAAA,EAAAA,KAACE,EAAAA,EAAQ,KAEtB,CACEN,GAAI,EACJC,MAAO,sBACPC,MAAO,sBACPC,WAAWC,EAAAA,EAAAA,KAACG,EAAAA,EAAkB,KAEhC,CACEP,GAAI,EACJC,MAAO,wBACPC,MAAO,iBACPC,WAAWC,EAAAA,EAAAA,KAACI,EAAAA,EAAW,KAEzB,CACER,GAAI,EACJC,MAAO,yBACPC,MAAO,kBACPC,WAAWC,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,KAEtB,CACET,GAAI,EACJC,MAAO,gBACPC,MAAO,iBACPC,WAAWC,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,MA8B1BC,EAAgB,SAAHC,GAAwC,IAAlCC,EAASD,EAATC,UAAWC,EAAeF,EAAfE,gBAClC,OACEV,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAC,UACEZ,EAAAA,EAAAA,KAAA,OAAKa,UAAU,4BAA2BD,UACxCE,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CAAClB,MAAOY,EAAWO,YAAY,WAAWC,SAAUP,EAAiBG,UAAU,UAASD,SAAA,EAC3FZ,EAAAA,EAAAA,KAAA,OAAKa,UAAU,8BAA6BD,UAC1CZ,EAAAA,EAAAA,KAACkB,EAAAA,WAAU,CAACL,UAAU,oCAAmCD,SACtDjB,EAAawB,KAAI,SAACC,GAAQ,OACzBpB,EAAAA,EAAAA,KAACqB,EAAAA,IAAG,CAEFxB,MAAOuB,EAASvB,MAChBgB,UAAU,2CAA0CD,SAEnDQ,EAAStB,OAJLsB,EAASxB,GAKV,SAIZI,EAAAA,EAAAA,KAAA,OAAKa,UAAU,2CAA0CD,UACvDZ,EAAAA,EAAAA,KAACsB,EAAAA,SAAQ,CAAAV,SACNjB,EAAawB,KAAI,SAACC,GAAQ,OACzBpB,EAAAA,EAAAA,KAACuB,EAAAA,SAAQ,CAEP1B,MAAOuB,EAASvB,MAChBgB,UAAU,wBAAuBD,SAEhCQ,EAASrB,WAJLqB,EAASxB,GAKL,cAQ3B,EAEA,EA/DkB,WAChB,IAAQ4B,GAAaC,EAAAA,EAAAA,MAAbD,SAGFE,EAAmB/B,EAAagC,WAAU,SAACC,GAAG,OAAKJ,EAASK,SAASD,EAAI/B,MAAM,IAGrFiC,GAAkCC,EAAAA,EAAAA,WACV,IAAtBL,EAA0B/B,EAAa+B,GAAkB7B,MAAQF,EAH3C,GAGyEE,OAChGmC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAFMrB,EAASuB,EAAA,GAAEE,EAAYF,EAAA,GAQ9B,OACElB,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACEZ,EAAAA,EAAAA,KAACmC,EAAAA,GAAS,KACVnC,EAAAA,EAAAA,KAACoC,EAAAA,GAAiB,KAClBpC,EAAAA,EAAAA,KAACqC,EAAAA,GAAW,CAACC,KAAK,gBAClBtC,EAAAA,EAAAA,KAACO,EAAa,CAACE,UAAWA,EAAWC,gBATjB,SAACb,GACvBqC,EAAarC,EACf,KAQIG,EAAAA,EAAAA,KAACuC,EAAAA,GAAM,MAGb,C","sources":["Pages/Account/MyAccountTabs/MyAccount.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Tabs, TabsHeader, TabsBody, Tab, TabPanel } from \"@material-tailwind/react\";\r\nimport StepperComponent from \"../OrderTracking/StepperComponent\";\r\nimport MyOrderComponent from \"../MyOrders/MyOrderComponent\";\r\nimport Wishlist from \"../Wishlist/Wishlist\";\r\nimport AccountInformation from \"../AccountInformation/AccountInformation\";\r\nimport Addressbook from \"../AddressBook/Addressbook\";\r\nimport Password from \"../Password/Password\";\r\nimport \"./MyAccount.css\";\r\nimport { LargeScreenNavbar, Breadcrumbs, NavbarTop, Footer } from \"../../../Components/SharedComponents\";\r\nimport {  useLocation } from \"react-router-dom\";\r\n\r\nconst tabPanelData = [\r\n  {\r\n    id: 1,\r\n    value: \"myorders\",\r\n    title: \"My Orders\",\r\n    component: <MyOrderComponent />,\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"mywishlist\",\r\n    title: \"Wishlist\",\r\n    component: <Wishlist />,\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"account/information\",\r\n    title: \"Account Information\",\r\n    component: <AccountInformation />,\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"account/manageaddress\",\r\n    title: \"Manage Address\",\r\n    component: <Addressbook />,\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"account/changepassword\",\r\n    title: \"Change Password\",\r\n    component: <Password />,\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"ordertracking\",\r\n    title: \"Order Tracking\",\r\n    component: <StepperComponent />,\r\n  },\r\n];\r\n\r\nconst MyAccount = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  // Find the tab index based on the URL path\r\n  const initialActiveTab = tabPanelData.findIndex((tab) => pathname.includes(tab.value));\r\n  const defaultTabIndex = 0; // Set a default tab index in case the URL does not match any tab\r\n\r\n  const [activeTab, setActiveTab] = useState(\r\n    initialActiveTab !== -1 ? tabPanelData[initialActiveTab].value : tabPanelData[defaultTabIndex].value\r\n  );\r\n\r\n  const handleTabChange = (value) => {\r\n    setActiveTab(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarTop />\r\n      <LargeScreenNavbar />\r\n      <Breadcrumbs name='My Account' />\r\n      <MyAccountTabs activeTab={activeTab} handleTabChange={handleTabChange} />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyAccountTabs = ({ activeTab, handleTabChange }) => {\r\n  return (\r\n    <>\r\n      <div className='section-padding common-mt'>\r\n        <Tabs value={activeTab} orientation='vertical' onChange={handleTabChange} className='row p-0'>\r\n          <div className='col-sm-12 col-lg-4 col-md-4'>\r\n            <TabsHeader className=' tabs-header rounded-none tabs-bg'>\r\n              {tabPanelData.map((tabPanel) => (\r\n                <Tab\r\n                  key={tabPanel.id}\r\n                  value={tabPanel.value}\r\n                  className='py-3 text-black border-b-2 rounded-none '\r\n                >\r\n                  {tabPanel.title}\r\n                </Tab>\r\n              ))}\r\n            </TabsHeader>\r\n          </div>\r\n          <div className=' mt-0 col-sm-12 m-auto col-lg-8 col-md-8'>\r\n            <TabsBody>\r\n              {tabPanelData.map((tabPanel) => (\r\n                <TabPanel\r\n                  key={tabPanel.id}\r\n                  value={tabPanel.value}\r\n                  className='p-0  m-0 rounded-none'\r\n                >\r\n                  {tabPanel.component}\r\n                </TabPanel>\r\n              ))}\r\n            </TabsBody>\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyAccount;\r\n"],"names":["tabPanelData","id","value","title","component","_jsx","MyOrderComponent","Wishlist","AccountInformation","Addressbook","Password","StepperComponent","MyAccountTabs","_ref","activeTab","handleTabChange","_Fragment","children","className","_jsxs","Tabs","orientation","onChange","TabsHeader","map","tabPanel","Tab","TabsBody","TabPanel","pathname","useLocation","initialActiveTab","findIndex","tab","includes","_useState","useState","_useState2","_slicedToArray","setActiveTab","NavbarTop","LargeScreenNavbar","Breadcrumbs","name","Footer"],"sourceRoot":""}